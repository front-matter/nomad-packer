# docker-compose for running InvenioRDM for local development
#
# Usage::
#
#   $ docker compose up -d
#
# THE following services are included:
# - SSL termination: Traefik (exposed ports: 40, 443)
# - Frontend: Nginx (exposed port: 8000)
# - UI application: UWSGI (not exposed)
# - API application: UWSGI (not exposed)
# - Cache: Redis (exposed port: 6379)
# - DB: PostgresSQL (exposed port: 5432 or 3306)
# - Message queue: RabbitMQ (exposed ports: 5672, 15672)
# - Search platform: OpenSearch (exposed ports: 9200, 9300)
# - OpenSearch Dashboard view OS indexes (exposed ports: 5601)

version: '3.8'
services:
  traefik:
    image: traefik:v2.9
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80

      # use default Traefic TLS certificate (browser may give warnings)
      - --entrypoints.websecure.address=:443
      - --api.insecure
    labels:
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      
      # global redirect to https
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  # web-ui:
  #   image: "ghcr.io/front-matter/invenio-rdm:0.11.0"
  #   restart: "unless-stopped"
  #   environment:
  #     - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
  #     - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
  #     - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
  #     - "INVENIO_CACHE_TYPE=redis"
  #     - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
  #     - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
  #     - "INVENIO_SEARCH_HOSTS=['search:9200']"
  #     - "INVENIO_SECRET_KEY=CHANGE_ME"
  #     - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://inveniordm:inveniordm@db/inveniordm"
  #     - "INVENIO_WSGI_PROXIES=2"
  #     - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
  #   command: ["uwsgi /opt/invenio/var/instance/uwsgi_ui.ini"]
  #   ports:
  #     - "5000"
  #   volumes:
  #     - static_data:/opt/invenio/var/instance/static
  # web-api:
  #   image: "ghcr.io/front-matter/invenio-rdm:0.11.0"
  #   restart: "unless-stopped"
  #   environment:
  #     - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
  #     - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
  #     - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
  #     - "INVENIO_CACHE_TYPE=redis"
  #     - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
  #     - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
  #     - "INVENIO_SEARCH_HOSTS=['search:9200']"
  #     - "INVENIO_SECRET_KEY=CHANGE_ME"
  #     - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://inveniordm:inveniordm@db/inveniordm"
  #     - "INVENIO_WSGI_PROXIES=2"
  #     - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
  #   command: ["uwsgi /opt/invenio/var/instance/uwsgi_rest.ini"]
  #   ports:
  #     - "5000"
  # worker:
  #   image: "ghcr.io/front-matter/invenio-rdm:0.11.0"
  #   restart: "unless-stopped"
  #   environment:
  #     - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
  #     - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
  #     - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
  #     - "INVENIO_CACHE_TYPE=redis"
  #     - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
  #     - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
  #     - "INVENIO_SEARCH_HOSTS=['search:9200']"
  #     - "INVENIO_SECRET_KEY=CHANGE_ME"
  #     - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://inveniordm:inveniordm@db/inveniordm"
  #     - "INVENIO_WSGI_PROXIES=2"
  #     - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
  #   command: ["celery -A invenio_app.celery worker --loglevel=INFO"]
  #   depends_on:
  #     search:
  #       condition: service_started
  #     cache:
  #       condition: service_started
  #     db:
  #       condition: service_started
  #     mq:
  #       condition: service_started
  # frontend:
  #   image: "ghcr.io/front-matter/invenio-rdm-nginx:1.0"
  #   restart: "unless-stopped"
  #   labels:
  #     - --port=8000

  #     # Use port 8000, redirected from 443
  #     - traefik.http.routers.frontend.rule=Host(`localhost`)
  #     - traefik.http.routers.frontend.tls=true
  #     - traefik.http.services.frontend.loadbalancer.server.port=8000
  #   volumes:
  #     - static_data:/opt/invenio/var/instance/static
  #   depends_on:
  #     - web-ui
  #     - web-api
  cache:
    image: redis:7
    restart: "unless-stopped"
    read_only: true
    ports:
      - "6379:6379"
  mq:
    image: rabbitmq:3-management
    restart: "unless-stopped"
    ports:
      - "15672:15672"
      - "5672:5672"
  search:
    image: opensearchproject/opensearch:2.6.0
    restart: "unless-stopped"
    environment:
      # settings only for development. DO NOT use in production!
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
    volumes:
      - ./docker/opensearch:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.6.0
    container_name: opensearch-dashboards
    ports:
      - "5601:5601"
    expose:
      - "5601"
    environment:
      # settings only for development. DO NOT use in production!
      - 'OPENSEARCH_HOSTS=["http://search:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
volumes:
  static_data:
  data:
